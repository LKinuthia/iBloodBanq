{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\BloodRecords.js\";\nimport React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport BloodSupplyChart from './BloodSupplyChart';\nimport './BloodRecords.css';\nconst BloodRecords = () => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [predictions, setPredictions] = useState([]);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const fetchPredictions = () => {\n    fetch('http://127.0.0.1:5000/dashboard/').then(response => response.json()).then(data => setPredictions(data)).catch(error => console.error('Error fetching predictions:', error));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-records-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    isOpen: isSidebarOpen,\n    toggleSidebar: toggleSidebar,\n    handleLogout: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-records-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sidebar-toggler\",\n    onClick: toggleSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"\\u2630\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Blood Records Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchPredictions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Fetch Predictions\")), /*#__PURE__*/React.createElement(BloodSupplyChart, {\n    data: predictions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n};\nexport default BloodRecords;","map":{"version":3,"names":["React","useState","Sidebar","BloodSupplyChart","BloodRecords","isSidebarOpen","setIsSidebarOpen","predictions","setPredictions","toggleSidebar","fetchPredictions","fetch","then","response","json","data","catch","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","handleLogout","onClick"],"sources":["C:/Users/User/blood-bank-management/src/components/BloodRecords.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport BloodSupplyChart from './BloodSupplyChart';\r\nimport './BloodRecords.css';\r\n\r\nconst BloodRecords = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [predictions, setPredictions] = useState([]);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  };\r\n\r\n  const fetchPredictions = () => {\r\n    fetch('http://127.0.0.1:5000/dashboard/')\r\n      .then(response => response.json())\r\n      .then(data => setPredictions(data))\r\n      .catch(error => console.error('Error fetching predictions:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"blood-records-container\">\r\n      <Sidebar isOpen={isSidebarOpen} toggleSidebar={toggleSidebar} handleLogout={() => {}} />\r\n      <div className=\"blood-records-content\">\r\n        <button className=\"sidebar-toggler\" onClick={toggleSidebar}>\r\n          â˜°\r\n        </button>\r\n        <h1>Blood Records Dashboard</h1>\r\n        <div>\r\n          <button onClick={fetchPredictions}>Fetch Predictions</button>\r\n        </div>\r\n        <BloodSupplyChart data={predictions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BloodRecords;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,oBAAoB;AAE3B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAC1BH,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7BC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,cAAc,CAACO,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC;EAED,oBACEjB,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtC1B,KAAA,CAAAmB,aAAA,CAACjB,OAAO;IAACyB,MAAM,EAAEtB,aAAc;IAACI,aAAa,EAAEA,aAAc;IAACmB,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACxF1B,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpC1B,KAAA,CAAAmB,aAAA;IAAQC,SAAS,EAAC,iBAAiB;IAACS,OAAO,EAAEpB,aAAc;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAEpD,CAAC,eACT1B,KAAA,CAAAmB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,yBAA2B,CAAC,eAChC1B,KAAA,CAAAmB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE1B,KAAA,CAAAmB,aAAA;IAAQU,OAAO,EAAEnB,gBAAiB;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAyB,CACzD,CAAC,eACN1B,KAAA,CAAAmB,aAAA,CAAChB,gBAAgB;IAACY,IAAI,EAAER,WAAY;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACnC,CACF,CAAC;AAEV,CAAC;AAED,eAAetB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}