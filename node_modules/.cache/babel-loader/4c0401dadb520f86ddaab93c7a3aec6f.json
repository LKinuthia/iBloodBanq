{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\pages\\\\Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../../App.css';\nimport Dashboards from '../Dashbar';\nimport Footer from '../Footer';\nimport { db, collection, query, where, getDocs } from '../firebase.js';\nfunction Dashboard({\n  hospital,\n  handleLogout\n}) {\n  const [notificationCount, setNotificationCount] = useState(0);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const q = query(collection(db, 'requests'), where('status', '==', 'pending'));\n        const querySnapshot = await getDocs(q);\n        setNotificationCount(querySnapshot.size);\n      } catch (error) {\n        console.error('Error fetching notifications:', error);\n      }\n    };\n    fetchNotifications();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dashboards, {\n    hospital: hospital,\n    handleLogout: handleLogout,\n    notificationCount: notificationCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n}\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Dashboards","Footer","db","collection","query","where","getDocs","Dashboard","hospital","handleLogout","notificationCount","setNotificationCount","fetchNotifications","q","querySnapshot","size","error","console","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/User/blood-bank-management/src/components/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../App.css';\r\nimport Dashboards from '../Dashbar';\r\nimport Footer from '../Footer';\r\nimport { db, collection, query, where, getDocs } from '../firebase.js';\r\n\r\nfunction Dashboard({ hospital, handleLogout }) {\r\n    const [notificationCount, setNotificationCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchNotifications = async () => {\r\n          try {\r\n            const q = query(collection(db, 'requests'), where('status', '==', 'pending'));\r\n            const querySnapshot = await getDocs(q);\r\n            setNotificationCount(querySnapshot.size);\r\n          } catch (error) {\r\n            console.error('Error fetching notifications:', error);\r\n          }\r\n        };\r\n    \r\n        fetchNotifications();\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n            <Dashboards hospital={hospital} handleLogout={handleLogout} notificationCount={notificationCount} /> \r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,EAAE,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,QAAQ,gBAAgB;AAEtE,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAC3C,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ,MAAMa,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,CAAC,GAAGT,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QAC7E,MAAMS,aAAa,GAAG,MAAMR,OAAO,CAACO,CAAC,CAAC;QACtCF,oBAAoB,CAACG,aAAa,CAACC,IAAI,CAAC;MAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDJ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAER,oBACIf,KAAA,CAAAqB,aAAA,CAAArB,KAAA,CAAAsB,QAAA,qBACItB,KAAA,CAAAqB,aAAA,CAAClB,UAAU;IAACQ,QAAQ,EAAEA,QAAS;IAACC,YAAY,EAAEA,YAAa;IAACC,iBAAiB,EAAEA,iBAAkB;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpG5B,KAAA,CAAAqB,aAAA,CAACjB,MAAM;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACX,CAAC;AAEX;AAEA,eAAelB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}