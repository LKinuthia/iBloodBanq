{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\BloodSupplyChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, Title, Tooltip, Legend } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, LineElement, Title, Tooltip, Legend);\nconst BloodSupplyChart = ({\n  data\n}) => {\n  const chartData = {\n    labels: data.map(item => item.Date),\n    datasets: [{\n      label: 'Supply',\n      data: data.map(item => item.Supply),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      fill: true\n    }, {\n      label: 'Prediction',\n      data: data.map(item => item.Prediction),\n      borderColor: 'rgba(255, 99, 132, 1)',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      fill: true\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            return `${context.dataset.label}: ${context.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Value'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Blood Supply and Prediction Chart\"), /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\nexport default BloodSupplyChart;","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","LineElement","Title","Tooltip","Legend","register","BloodSupplyChart","data","chartData","labels","map","item","Date","datasets","label","Supply","borderColor","backgroundColor","fill","Prediction","options","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","x","title","display","text","y","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/User/blood-bank-management/src/components/BloodSupplyChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, LineElement, Title, Tooltip, Legend);\r\n\r\nconst BloodSupplyChart = ({ data }) => {\r\n  const chartData = {\r\n    labels: data.map(item => item.Date),\r\n    datasets: [\r\n      {\r\n        label: 'Supply',\r\n        data: data.map(item => item.Supply),\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        fill: true,\r\n      },\r\n      {\r\n        label: 'Prediction',\r\n        data: data.map(item => item.Prediction),\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) => {\r\n            return `${context.dataset.label}: ${context.raw}`;\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Date',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Value',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Blood Supply and Prediction Chart</h2>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BloodSupplyChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAE5GN,OAAO,CAACO,QAAQ,CAACN,aAAa,EAAEC,WAAW,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEjF,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACrC,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEF,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;IACnCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,QAAQ;MACfP,IAAI,EAAEA,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,MAAM,CAAC;MACnCC,WAAW,EAAE,uBAAuB;MACpCC,eAAe,EAAE,yBAAyB;MAC1CC,IAAI,EAAE;IACR,CAAC,EACD;MACEJ,KAAK,EAAE,YAAY;MACnBP,IAAI,EAAEA,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACQ,UAAU,CAAC;MACvCH,WAAW,EAAE,uBAAuB;MACpCC,eAAe,EAAE,yBAAyB;MAC1CC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAME,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;QACPC,SAAS,EAAE;UACTZ,KAAK,EAAGa,OAAO,IAAK;YAClB,OAAO,GAAGA,OAAO,CAACC,OAAO,CAACd,KAAK,KAAKa,OAAO,CAACE,GAAG,EAAE;UACnD;QACF;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDH,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBACEvC,KAAA,CAAAyC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/C,KAAA,CAAAyC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,mCAAqC,CAAC,eAC1C/C,KAAA,CAAAyC,aAAA,CAACxC,IAAI;IAACW,IAAI,EAAEC,SAAU;IAACY,OAAO,EAAEA,OAAQ;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvC,CAAC;AAEV,CAAC;AAED,eAAepC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}