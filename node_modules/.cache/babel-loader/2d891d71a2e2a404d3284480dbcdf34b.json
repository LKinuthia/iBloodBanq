{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\FindingBlood.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst FindingBlood = () => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/data');\n        console.log('Data received:', response.data);\n        setData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error);\n      }\n    };\n    fetchData();\n    const loadGoogleMapsApi = () => {\n      if (!window.google) {\n        const script = document.createElement('script');\n        script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyD07cMGrAdZzFU1FexlCWLCWlPX-J3g6p4&libraries=places`;\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          console.log('Google Maps API script loaded');\n          initializeMap();\n        };\n        script.onerror = e => {\n          console.error('Error loading Google Maps API script:', e);\n        };\n        document.head.appendChild(script);\n      } else {\n        console.log('Google Maps API already loaded');\n        initializeMap();\n      }\n    };\n    const initializeMap = () => {\n      if (window.google) {\n        console.log('Google Maps API initialized');\n        const map = new window.google.maps.Map(document.getElementById('map'), {\n          center: {\n            lat: -1.2921,\n            lng: 36.8219\n          },\n          // Centered on Nairobi as an example\n          zoom: 7\n        });\n\n        // Geocoder instance\n        const geocoder = new window.google.maps.Geocoder();\n\n        // Process each location in data\n        data.forEach((item, index) => {\n          // Use geocode to get coordinates for location\n          geocoder.geocode({\n            address: item.Location\n          }, (results, status) => {\n            if (status === 'OK' && results[0]) {\n              const marker = new window.google.maps.Marker({\n                position: results[0].geometry.location,\n                map: map,\n                title: `${item.Location} - ${item.BloodType} (${item.Supply} gallons)`\n              });\n\n              // Info window content\n              const infowindow = new window.google.maps.InfoWindow({\n                content: `<div><strong>${item.Location}</strong><br>Blood Type: ${item.BloodType}<br>Supply: ${item.Supply} gallons</div>`\n              });\n\n              // Event listener to open info window on marker click\n              marker.addListener('click', () => {\n                infowindow.open(map, marker);\n              });\n            } else {\n              console.warn(`Geocode was not successful for the following reason: ${status}`);\n            }\n          });\n        });\n      } else {\n        console.error('Google Maps API not available');\n      }\n    };\n    loadGoogleMapsApi();\n    return () => {\n      const googleMapsScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (googleMapsScript) {\n        document.head.removeChild(googleMapsScript);\n      }\n    };\n  }, [data]); // Run effect whenever 'data' changes\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Blood Supply and Demand Data\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, Array.isArray(data) && data.length > 0 ? data.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, Object.entries(item).map(([key, value]) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 32\n    }\n  }, key, \":\"), \" \", value)))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"No data available\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    style: {\n      height: '600px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n};\nexport default FindingBlood;","map":{"version":3,"names":["React","useEffect","useState","axios","FindingBlood","data","setData","error","setError","fetchData","response","get","console","log","loadGoogleMapsApi","window","google","script","document","createElement","src","async","defer","onload","initializeMap","onerror","e","head","appendChild","map","maps","Map","getElementById","center","lat","lng","zoom","geocoder","Geocoder","forEach","item","index","geocode","address","Location","results","status","marker","Marker","position","geometry","location","title","BloodType","Supply","infowindow","InfoWindow","content","addListener","open","warn","googleMapsScript","querySelector","removeChild","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","Array","isArray","length","key","Object","entries","value","id","style","height","width"],"sources":["C:/Users/User/blood-bank-management/src/components/FindingBlood.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FindingBlood = () => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/data');\r\n        console.log('Data received:', response.data);\r\n        setData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    const loadGoogleMapsApi = () => {\r\n      if (!window.google) {\r\n        const script = document.createElement('script');\r\n        script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyD07cMGrAdZzFU1FexlCWLCWlPX-J3g6p4&libraries=places`;\r\n        script.async = true;\r\n        script.defer = true;\r\n        script.onload = () => {\r\n          console.log('Google Maps API script loaded');\r\n          initializeMap();\r\n        };\r\n        script.onerror = (e) => {\r\n          console.error('Error loading Google Maps API script:', e);\r\n        };\r\n        document.head.appendChild(script);\r\n      } else {\r\n        console.log('Google Maps API already loaded');\r\n        initializeMap();\r\n      }\r\n    };\r\n\r\n    const initializeMap = () => {\r\n      if (window.google) {\r\n        console.log('Google Maps API initialized');\r\n        const map = new window.google.maps.Map(document.getElementById('map'), {\r\n          center: { lat: -1.2921, lng: 36.8219 }, // Centered on Nairobi as an example\r\n          zoom: 7,\r\n        });\r\n\r\n        // Geocoder instance\r\n        const geocoder = new window.google.maps.Geocoder();\r\n\r\n        // Process each location in data\r\n        data.forEach((item, index) => {\r\n          // Use geocode to get coordinates for location\r\n          geocoder.geocode({ address: item.Location }, (results, status) => {\r\n            if (status === 'OK' && results[0]) {\r\n              const marker = new window.google.maps.Marker({\r\n                position: results[0].geometry.location,\r\n                map: map,\r\n                title: `${item.Location} - ${item.BloodType} (${item.Supply} gallons)`,\r\n              });\r\n\r\n              // Info window content\r\n              const infowindow = new window.google.maps.InfoWindow({\r\n                content: `<div><strong>${item.Location}</strong><br>Blood Type: ${item.BloodType}<br>Supply: ${item.Supply} gallons</div>`,\r\n              });\r\n\r\n              // Event listener to open info window on marker click\r\n              marker.addListener('click', () => {\r\n                infowindow.open(map, marker);\r\n              });\r\n            } else {\r\n              console.warn(`Geocode was not successful for the following reason: ${status}`);\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        console.error('Google Maps API not available');\r\n      }\r\n    };\r\n\r\n    loadGoogleMapsApi();\r\n\r\n    return () => {\r\n      const googleMapsScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\r\n      if (googleMapsScript) {\r\n        document.head.removeChild(googleMapsScript);\r\n      }\r\n    };\r\n  }, [data]); // Run effect whenever 'data' changes\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blood Supply and Demand Data</h1>\r\n      <ul>\r\n        {Array.isArray(data) && data.length > 0 ? (\r\n          data.map((item, index) => (\r\n            <li key={index}>\r\n              {Object.entries(item).map(([key, value]) => (\r\n                <div key={key}><strong>{key}:</strong> {value}</div>\r\n              ))}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <div>No data available</div>\r\n        )}\r\n      </ul>\r\n      <div id=\"map\" style={{ height: '600px', width: '100%' }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindingBlood;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}