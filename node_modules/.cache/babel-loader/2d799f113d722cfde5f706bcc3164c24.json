{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\RecordList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getBloodRecords, updateBloodRecord, deleteBloodRecord, addOrUpdateBloodRecord } from '../services/bloodService';\nimport './RecordList.css';\nconst RecordListWithModal = () => {\n  const [data, setData] = useState([]);\n  const [selectedRecord, setSelectedRecord] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [recordToDelete, setRecordToDelete] = useState(null);\n  const [modalType, setModalType] = useState(''); // Track modal type: 'add' or 'update'\n  const [form, setForm] = useState({\n    date: '',\n    location: '',\n    bloodType: '',\n    event: '',\n    donations: '',\n    supply: '',\n    temperature: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const records = await getBloodRecords();\n        console.log(records); // Check the structure of the fetched records\n        // Calculate stock difference and update records\n        const updatedRecords = records.map(record => ({\n          ...record,\n          stock: record.donations - record.supply\n        }));\n\n        // Group by location and blood type\n        const groupedData = updatedRecords.reduce((acc, record) => {\n          const {\n            location,\n            bloodType,\n            stock\n          } = record;\n          if (!acc[location]) acc[location] = {};\n          if (!acc[location][bloodType]) acc[location][bloodType] = 0;\n          acc[location][bloodType] += stock;\n          return acc;\n        }, {});\n        setData(groupedData);\n      } catch (error) {\n        console.error(\"Error fetching blood records:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (selectedRecord) {\n      setForm({\n        date: selectedRecord.date || '',\n        location: selectedRecord.location || '',\n        bloodType: selectedRecord.bloodType || '',\n        event: selectedRecord.event || '',\n        donations: selectedRecord.donations || '',\n        supply: selectedRecord.supply || '',\n        temperature: selectedRecord.temperature || ''\n      });\n    }\n  }, [selectedRecord]);\n  const handleUpdate = record => {\n    setSelectedRecord(record);\n    setModalType('update');\n    setShowModal(true);\n  };\n  const handleAdd = () => {\n    setSelectedRecord(null);\n    setModalType('add');\n    setForm({\n      date: '',\n      location: '',\n      bloodType: '',\n      event: '',\n      donations: '',\n      supply: '',\n      temperature: ''\n    });\n    setShowModal(true);\n  };\n  const handleDelete = id => {\n    setRecordToDelete(id);\n    setShowDeleteConfirm(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      await deleteBloodRecord(recordToDelete);\n      setRecordToDelete(null);\n      setShowDeleteConfirm(false);\n      const records = await getBloodRecords();\n      const updatedRecords = records.map(record => ({\n        ...record,\n        stock: record.donations - record.supply\n      }));\n      const groupedData = updatedRecords.reduce((acc, record) => {\n        const {\n          location,\n          bloodType,\n          stock\n        } = record;\n        if (!acc[location]) acc[location] = {};\n        if (!acc[location][bloodType]) acc[location][bloodType] = 0;\n        acc[location][bloodType] += stock;\n        return acc;\n      }, {});\n      setData(groupedData);\n    } catch (error) {\n      console.error(\"Error deleting blood record:\", error);\n    }\n  };\n  const cancelDelete = () => {\n    setRecordToDelete(null);\n    setShowDeleteConfirm(false);\n  };\n  const closeModal = () => {\n    setSelectedRecord(null);\n    setShowModal(false);\n  };\n  const handleSave = async form => {\n    try {\n      if (modalType === 'update') {\n        await updateBloodRecord(selectedRecord.id, form);\n      } else if (modalType === 'add') {\n        await addOrUpdateBloodRecord(form);\n      }\n      closeModal();\n      const records = await getBloodRecords();\n      const updatedRecords = records.map(record => ({\n        ...record,\n        stock: record.donations - record.supply\n      }));\n      const groupedData = updatedRecords.reduce((acc, record) => {\n        const {\n          location,\n          bloodType,\n          stock\n        } = record;\n        if (!acc[location]) acc[location] = {};\n        if (!acc[location][bloodType]) acc[location][bloodType] = 0;\n        acc[location][bloodType] += stock;\n        return acc;\n      }, {});\n      setData(groupedData);\n    } catch (error) {\n      console.error(\"Error saving record:\", error);\n      alert(\"There was an error saving the record. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-record-button\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Add New Record\"), Object.keys(data).map(location => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-box\",\n    key: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-name-location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, location)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, \"In Stock:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, Object.keys(data[location]).map(bloodType => /*#__PURE__*/React.createElement(\"li\", {\n    key: bloodType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }, bloodType, \": \", data[location][bloodType]))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleUpdate({\n      location\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(location),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Delete\")))), showModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n      if (form.donations <= 0 || form.supply <= 0) {\n        alert(\"Donations and Supply must be positive numbers.\");\n        return;\n      }\n      try {\n        const formattedData = {\n          ...form,\n          bloodType: form.bloodType\n        };\n        console.log(\"Submitting data:\", formattedData);\n        await handleSave(formattedData);\n      } catch (error) {\n        console.error(\"Error saving record:\", error);\n        alert(\"There was an error saving the record. Please try again.\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"date\",\n    type: \"date\",\n    value: form.date || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      date: e.target.value\n    })),\n    placeholder: \"Date\",\n    required: true,\n    disabled: modalType === 'update',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"location\",\n    value: form.location || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      location: e.target.value\n    })),\n    placeholder: \"Location\",\n    required: true,\n    disabled: modalType === 'update',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  })), modalType === 'update' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"bloodType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 37\n    }\n  }, \"Blood Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"bloodType\",\n    name: \"bloodType\",\n    value: form.bloodType || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      bloodType: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, (selectedRecord === null || selectedRecord === void 0 ? void 0 : selectedRecord.bloodType) ? /*#__PURE__*/React.createElement(\"option\", {\n    value: selectedRecord.bloodType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 45\n    }\n  }, selectedRecord.bloodType) : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 45\n    }\n  }, \"Select Blood Type\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  }, \"Blood Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"bloodType\",\n    value: form.bloodType || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      bloodType: e.target.value\n    })),\n    placeholder: \"Blood Type\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"Event\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"event\",\n    value: form.event || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      event: e.target.value\n    })),\n    placeholder: \"Event\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, \"Donations\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"donations\",\n    type: \"number\",\n    value: form.donations || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      donations: e.target.value\n    })),\n    placeholder: \"Donations\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"Supply\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"supply\",\n    type: \"number\",\n    value: form.supply || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      supply: e.target.value\n    })),\n    placeholder: \"Supply\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }\n  }, \"Temperature\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"temperature\",\n    value: form.temperature || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      temperature: e.target.value\n    })),\n    placeholder: \"Temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, \"Save\")))), showDeleteConfirm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: cancelDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, \"Are you sure you want to delete this record?\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: confirmDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cancelDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, \"No\"))));\n};\nexport default RecordListWithModal;","map":{"version":3,"names":["React","useEffect","useState","getBloodRecords","updateBloodRecord","deleteBloodRecord","addOrUpdateBloodRecord","RecordListWithModal","data","setData","selectedRecord","setSelectedRecord","showModal","setShowModal","showDeleteConfirm","setShowDeleteConfirm","recordToDelete","setRecordToDelete","modalType","setModalType","form","setForm","date","location","bloodType","event","donations","supply","temperature","fetchData","records","console","log","updatedRecords","map","record","stock","groupedData","reduce","acc","error","handleUpdate","handleAdd","handleDelete","id","confirmDelete","cancelDelete","closeModal","handleSave","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","key","onSubmit","e","preventDefault","formattedData","name","type","value","onChange","prev","target","placeholder","required","disabled","htmlFor"],"sources":["C:/Users/User/blood-bank-management/src/components/RecordList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getBloodRecords, updateBloodRecord, deleteBloodRecord, addOrUpdateBloodRecord } from '../services/bloodService';\r\nimport './RecordList.css';\r\n\r\nconst RecordListWithModal = () => {\r\n    const [data, setData] = useState([]);\r\n    const [selectedRecord, setSelectedRecord] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [recordToDelete, setRecordToDelete] = useState(null);\r\n    const [modalType, setModalType] = useState(''); // Track modal type: 'add' or 'update'\r\n    const [form, setForm] = useState({\r\n        date: '',\r\n        location: '',\r\n        bloodType: '',\r\n        event: '',\r\n        donations: '',\r\n        supply: '',\r\n        temperature: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const records = await getBloodRecords();\r\n                console.log(records); // Check the structure of the fetched records\r\n                // Calculate stock difference and update records\r\n                const updatedRecords = records.map(record => ({\r\n                    ...record,\r\n                    stock: record.donations - record.supply\r\n                }));\r\n\r\n                // Group by location and blood type\r\n                const groupedData = updatedRecords.reduce((acc, record) => {\r\n                    const { location, bloodType, stock } = record;\r\n                    if (!acc[location]) acc[location] = {};\r\n                    if (!acc[location][bloodType]) acc[location][bloodType] = 0;\r\n                    acc[location][bloodType] += stock;\r\n                    return acc;\r\n                }, {});\r\n\r\n                setData(groupedData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching blood records:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedRecord) {\r\n            setForm({\r\n                date: selectedRecord.date || '',\r\n                location: selectedRecord.location || '',\r\n                bloodType: selectedRecord.bloodType || '',\r\n                event: selectedRecord.event || '',\r\n                donations: selectedRecord.donations || '',\r\n                supply: selectedRecord.supply || '',\r\n                temperature: selectedRecord.temperature || ''\r\n            });\r\n        }\r\n    }, [selectedRecord]);\r\n\r\n    const handleUpdate = (record) => {\r\n        setSelectedRecord(record);\r\n        setModalType('update');\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        setSelectedRecord(null);\r\n        setModalType('add');\r\n        setForm({\r\n            date: '',\r\n            location: '',\r\n            bloodType: '',\r\n            event: '',\r\n            donations: '',\r\n            supply: '',\r\n            temperature: ''\r\n        });\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        setRecordToDelete(id);\r\n        setShowDeleteConfirm(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        try {\r\n            await deleteBloodRecord(recordToDelete);\r\n            setRecordToDelete(null);\r\n            setShowDeleteConfirm(false);\r\n            const records = await getBloodRecords();\r\n            const updatedRecords = records.map(record => ({\r\n                ...record,\r\n                stock: record.donations - record.supply\r\n            }));\r\n            const groupedData = updatedRecords.reduce((acc, record) => {\r\n                const { location, bloodType, stock } = record;\r\n                if (!acc[location]) acc[location] = {};\r\n                if (!acc[location][bloodType]) acc[location][bloodType] = 0;\r\n                acc[location][bloodType] += stock;\r\n                return acc;\r\n            }, {});\r\n            setData(groupedData);\r\n        } catch (error) {\r\n            console.error(\"Error deleting blood record:\", error);\r\n        }\r\n    };\r\n\r\n    const cancelDelete = () => {\r\n        setRecordToDelete(null);\r\n        setShowDeleteConfirm(false);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedRecord(null);\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleSave = async (form) => {\r\n        try {\r\n            if (modalType === 'update') {\r\n                await updateBloodRecord(selectedRecord.id, form);\r\n            } else if (modalType === 'add') {\r\n                await addOrUpdateBloodRecord(form);\r\n            }\r\n            closeModal();\r\n            const records = await getBloodRecords();\r\n            const updatedRecords = records.map(record => ({\r\n                ...record,\r\n                stock: record.donations - record.supply\r\n            }));\r\n            const groupedData = updatedRecords.reduce((acc, record) => {\r\n                const { location, bloodType, stock } = record;\r\n                if (!acc[location]) acc[location] = {};\r\n                if (!acc[location][bloodType]) acc[location][bloodType] = 0;\r\n                acc[location][bloodType] += stock;\r\n                return acc;\r\n            }, {});\r\n            setData(groupedData);\r\n        } catch (error) {\r\n            console.error(\"Error saving record:\", error);\r\n            alert(\"There was an error saving the record. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"blood-bank-container\">\r\n            <button className=\"add-record-button\" onClick={handleAdd}>Add New Record</button>\r\n            {Object.keys(data).map(location => (\r\n                <div className=\"blood-bank-box\" key={location}>\r\n                    <div className=\"blood-bank-info\">\r\n                        <div className=\"blood-bank-name-location\">\r\n                            <h2>{location}</h2>\r\n                        </div>\r\n                        <div className=\"blood-bank-stock\">\r\n                            <p>In Stock:</p>\r\n                            <ul>\r\n                                {Object.keys(data[location]).map(bloodType => (\r\n                                    <li key={bloodType}>{bloodType}: {data[location][bloodType]}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"blood-bank-actions\">\r\n                        <button onClick={() => handleUpdate({ location })}>Update</button>\r\n                        <button onClick={() => handleDelete(location)}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {showModal && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={closeModal}>&times;</span>\r\n                        <form\r\n                            onSubmit={async (e) => {\r\n                                e.preventDefault();\r\n                                if (form.donations <= 0 || form.supply <= 0) {\r\n                                    alert(\"Donations and Supply must be positive numbers.\");\r\n                                    return;\r\n                                }\r\n                                try {\r\n                                    const formattedData = {\r\n                                        ...form,\r\n                                        bloodType: form.bloodType,\r\n                                    };\r\n                                    console.log(\"Submitting data:\", formattedData);\r\n                                    await handleSave(formattedData);\r\n                                } catch (error) {\r\n                                    console.error(\"Error saving record:\", error);\r\n                                    alert(\"There was an error saving the record. Please try again.\");\r\n                                }\r\n                            }}\r\n                        >\r\n                            {/* Form Fields */}\r\n                            <div className=\"input-container\">\r\n                                <label>Date</label>\r\n                                <input\r\n                                    name=\"date\"\r\n                                    type=\"date\"\r\n                                    value={form.date || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, date: e.target.value }))}\r\n                                    placeholder=\"Date\"\r\n                                    required\r\n                                    disabled={modalType === 'update'}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Location</label>\r\n                                <input\r\n                                    name=\"location\"\r\n                                    value={form.location || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, location: e.target.value }))}\r\n                                    placeholder=\"Location\"\r\n                                    required\r\n                                    disabled={modalType === 'update'}\r\n                                />\r\n                            </div>\r\n                            {modalType === 'update' ? (\r\n                                <div className=\"input-container\">\r\n                                    <label htmlFor=\"bloodType\">Blood Type:</label>\r\n                                    <select\r\n                                        id=\"bloodType\"\r\n                                        name=\"bloodType\"\r\n                                        value={form.bloodType || ''}\r\n                                        onChange={(e) => setForm((prev) => ({ ...prev, bloodType: e.target.value }))}\r\n                                    >\r\n                                        {selectedRecord?.bloodType ? (\r\n                                            <option value={selectedRecord.bloodType}>{selectedRecord.bloodType}</option>\r\n                                        ) : (\r\n                                            <option value=\"\">Select Blood Type</option>\r\n                                        )}\r\n                                    </select>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"input-container\">\r\n                                    <label>Blood Type</label>\r\n                                    <input\r\n                                        name=\"bloodType\"\r\n                                        value={form.bloodType || ''}\r\n                                        onChange={(e) => setForm((prev) => ({ ...prev, bloodType: e.target.value }))}\r\n                                        placeholder=\"Blood Type\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            <div className=\"input-container\">\r\n                                <label>Event</label>\r\n                                <input\r\n                                    name=\"event\"\r\n                                    value={form.event || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, event: e.target.value }))}\r\n                                    placeholder=\"Event\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Donations</label>\r\n                                <input\r\n                                    name=\"donations\"\r\n                                    type=\"number\"\r\n                                    value={form.donations || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, donations: e.target.value }))}\r\n                                    placeholder=\"Donations\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Supply</label>\r\n                                <input\r\n                                    name=\"supply\"\r\n                                    type=\"number\"\r\n                                    value={form.supply || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, supply: e.target.value }))}\r\n                                    placeholder=\"Supply\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Temperature</label>\r\n                                <input\r\n                                    name=\"temperature\"\r\n                                    value={form.temperature || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, temperature: e.target.value }))}\r\n                                    placeholder=\"Temperature\"\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\">Save</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {showDeleteConfirm && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={cancelDelete}>&times;</span>\r\n                        <p>Are you sure you want to delete this record?</p>\r\n                        <button onClick={confirmDelete}>Yes</button>\r\n                        <button onClick={cancelDelete}>No</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecordListWithModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}