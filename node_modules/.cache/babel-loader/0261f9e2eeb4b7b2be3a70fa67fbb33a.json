{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\FindingBlood.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nconst FindingBlood = () => {\n  const [data, setData] = useState([]);\n  const [groupedData, setGroupedData] = useState({});\n  const [hoveredMarker, setHoveredMarker] = useState(null);\n  const containerStyle = {\n    width: '100%',\n    height: '400px'\n  };\n  const center = {\n    lat: -1.2921,\n    lng: 36.8219\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/data');\n        console.log('Data type:', typeof response.data);\n        console.log('Response:', response.data);\n        if (Array.isArray(response.data)) {\n          setData(response.data);\n        } else {\n          console.error('Data received is not an array');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Group data by location and blood type\n    const groupData = () => {\n      const grouped = data.reduce((acc, item) => {\n        const location = item.Location;\n        const bloodType = item['Blood Type'];\n        const supply = item.Supply;\n        if (!acc[location]) {\n          acc[location] = {};\n        }\n        if (!acc[location][bloodType]) {\n          acc[location][bloodType] = 0;\n        }\n        acc[location][bloodType] += supply;\n        return acc;\n      }, {});\n      console.log('Grouped Data:', grouped);\n      setGroupedData(grouped);\n    };\n    groupData();\n  }, [data]);\n  const getCoordinates = location => {\n    const locations = {\n      'Nairobi': {\n        lat: -1.286389,\n        lng: 36.817223\n      },\n      'Mombasa': {\n        lat: -4.043477,\n        lng: 39.668206\n      },\n      'Kisumu': {\n        lat: -0.091702,\n        lng: 34.768096\n      },\n      'Nakuru': {\n        lat: -0.28333,\n        lng: 36.06666\n      },\n      'Eldoret': {\n        lat: 0.51667,\n        lng: 35.28333\n      }\n    };\n    return locations[location] || center;\n  };\n  const handleMouseOver = useCallback(location => {\n    setHoveredMarker(location);\n  }, []);\n  const handleMouseOut = useCallback(() => {\n    setHoveredMarker(null);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD07cMGrAdZzFU1FexlCWLCWlPX-J3g6p4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, Object.keys(groupedData).map((location, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: index,\n    position: getCoordinates(location),\n    onMouseOver: () => handleMouseOver(location),\n    onMouseOut: handleMouseOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, hoveredMarker === location && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: getCoordinates(location),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, location), Object.keys(groupedData[location]).map((bloodType, idx) => /*#__PURE__*/React.createElement(\"p\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }, \"Blood Type: \", bloodType, \" - \", groupedData[location][bloodType])))))))));\n};\nexport default FindingBlood;","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","GoogleMap","LoadScript","Marker","InfoWindow","FindingBlood","data","setData","groupedData","setGroupedData","hoveredMarker","setHoveredMarker","containerStyle","width","height","center","lat","lng","fetchData","response","get","console","log","Array","isArray","error","groupData","grouped","reduce","acc","item","location","Location","bloodType","supply","Supply","getCoordinates","locations","handleMouseOver","handleMouseOut","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","zoom","Object","keys","map","index","key","position","onMouseOver","onMouseOut","idx"],"sources":["C:/Users/User/blood-bank-management/src/components/FindingBlood.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\n\r\nconst FindingBlood = () => {\r\n  const [data, setData] = useState([]);\r\n  const [groupedData, setGroupedData] = useState({});\r\n  const [hoveredMarker, setHoveredMarker] = useState(null);\r\n\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '400px',\r\n  };\r\n\r\n  const center = {\r\n    lat: -1.2921,\r\n    lng: 36.8219,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/data');\r\n        console.log('Data type:', typeof response.data);\r\n        console.log('Response:', response.data);\r\n\r\n        if (Array.isArray(response.data)) {\r\n          setData(response.data);\r\n        } else {\r\n          console.error('Data received is not an array');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Group data by location and blood type\r\n    const groupData = () => {\r\n      const grouped = data.reduce((acc, item) => {\r\n        const location = item.Location;\r\n        const bloodType = item['Blood Type'];\r\n        const supply = item.Supply;\r\n\r\n        if (!acc[location]) {\r\n          acc[location] = {};\r\n        }\r\n        if (!acc[location][bloodType]) {\r\n          acc[location][bloodType] = 0;\r\n        }\r\n        acc[location][bloodType] += supply;\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n      console.log('Grouped Data:', grouped);\r\n      setGroupedData(grouped);\r\n    };\r\n\r\n    groupData();\r\n  }, [data]);\r\n\r\n  const getCoordinates = (location) => {\r\n    const locations = {\r\n      'Nairobi': { lat: -1.286389, lng: 36.817223 },\r\n      'Mombasa': { lat: -4.043477, lng: 39.668206 },\r\n      'Kisumu': { lat: -0.091702, lng: 34.768096 },\r\n      'Nakuru': { lat: -0.28333, lng: 36.06666 },\r\n      'Eldoret': { lat: 0.51667, lng: 35.28333 },\r\n    };\r\n    return locations[location] || center;\r\n  };\r\n\r\n  const handleMouseOver = useCallback((location) => {\r\n    setHoveredMarker(location);\r\n  }, []);\r\n\r\n  const handleMouseOut = useCallback(() => {\r\n    setHoveredMarker(null);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <LoadScript googleMapsApiKey=\"AIzaSyD07cMGrAdZzFU1FexlCWLCWlPX-J3g6p4\">\r\n        <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={6}>\r\n          {Object.keys(groupedData).map((location, index) => (\r\n            <Marker\r\n              key={index}\r\n              position={getCoordinates(location)}\r\n              onMouseOver={() => handleMouseOver(location)}\r\n              onMouseOut={handleMouseOut}\r\n            >\r\n              {hoveredMarker === location && (\r\n                <InfoWindow position={getCoordinates(location)}>\r\n                  <div>\r\n                    <h3>{location}</h3>\r\n                    {Object.keys(groupedData[location]).map((bloodType, idx) => (\r\n                      <p key={idx}>Blood Type: {bloodType} - {groupedData[location][bloodType]}</p>\r\n                    ))}\r\n                  </div>\r\n                </InfoWindow>\r\n              )}\r\n            </Marker>\r\n          ))}\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindingBlood;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}