{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\pages\\\\ProfileManage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getAuth, updatePassword } from 'firebase/auth';\nimport { db, collection, query, getDocs } from '../../firebase';\nimport './ProfileManage.css';\nconst ProfileAndRecords = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [recordsSummary, setRecordsSummary] = useState([]);\n  const [loadingRecords, setLoadingRecords] = useState(true);\n\n  // Handle password change\n  const handlePasswordChange = async () => {\n    try {\n      const auth = getAuth();\n      await updatePassword(auth.currentUser, newPassword);\n      alert('Password updated successfully');\n      setNewPassword('');\n    } catch (error) {\n      setError('Error updating password');\n    }\n  };\n\n  // Fetch blood records summary\n  useEffect(() => {\n    const fetchRecordsSummary = async () => {\n      try {\n        const q = query(collection(db, 'bloodRecords'));\n        const querySnapshot = await getDocs(q);\n        const records = querySnapshot.docs.map(doc => doc.data());\n\n        // Aggregate records by date and location\n        const summary = records.reduce((acc, record) => {\n          const key = `${record.date}_${record.location}`;\n          if (!acc[key]) {\n            acc[key] = {\n              date: record.date,\n              location: record.location,\n              totalQuantity: 0\n            };\n          }\n          acc[key].totalQuantity += parseFloat(record.quantity) || 0;\n          return acc;\n        }, {});\n        setRecordsSummary(Object.values(summary));\n        setLoadingRecords(false);\n      } catch (error) {\n        setError('Error fetching blood records');\n      }\n    };\n    fetchRecordsSummary();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-and-records\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-management\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Change Password\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"New Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Change Password\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-records-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Blood Records Summary\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 27\n    }\n  }, error), loadingRecords ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Loading...\") : recordsSummary.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"No records available.\") : /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, \"Total Quantity\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, recordsSummary.map((record, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, record.date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, record.location), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, record.totalQuantity)))))));\n};\nexport default ProfileAndRecords;","map":{"version":3,"names":["React","useState","useEffect","getAuth","updatePassword","db","collection","query","getDocs","ProfileAndRecords","newPassword","setNewPassword","error","setError","recordsSummary","setRecordsSummary","loadingRecords","setLoadingRecords","handlePasswordChange","auth","currentUser","alert","fetchRecordsSummary","q","querySnapshot","records","docs","map","doc","data","summary","reduce","acc","record","key","date","location","totalQuantity","parseFloat","quantity","Object","values","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","length","index"],"sources":["C:/Users/User/blood-bank-management/src/components/pages/ProfileManage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAuth, updatePassword } from 'firebase/auth';\r\nimport { db, collection, query, getDocs } from '../../firebase';\r\nimport './ProfileManage.css';\r\n\r\nconst ProfileAndRecords = () => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [recordsSummary, setRecordsSummary] = useState([]);\r\n    const [loadingRecords, setLoadingRecords] = useState(true);\r\n\r\n    // Handle password change\r\n    const handlePasswordChange = async () => {\r\n        try {\r\n            const auth = getAuth();\r\n            await updatePassword(auth.currentUser, newPassword);\r\n            alert('Password updated successfully');\r\n            setNewPassword('');\r\n        } catch (error) {\r\n            setError('Error updating password');\r\n        }\r\n    };\r\n\r\n    // Fetch blood records summary\r\n    useEffect(() => {\r\n        const fetchRecordsSummary = async () => {\r\n            try {\r\n                const q = query(collection(db, 'bloodRecords'));\r\n                const querySnapshot = await getDocs(q);\r\n                const records = querySnapshot.docs.map(doc => doc.data());\r\n\r\n                // Aggregate records by date and location\r\n                const summary = records.reduce((acc, record) => {\r\n                    const key = `${record.date}_${record.location}`;\r\n                    if (!acc[key]) {\r\n                        acc[key] = {\r\n                            date: record.date,\r\n                            location: record.location,\r\n                            totalQuantity: 0\r\n                        };\r\n                    }\r\n                    acc[key].totalQuantity += parseFloat(record.quantity) || 0;\r\n                    return acc;\r\n                }, {});\r\n\r\n                setRecordsSummary(Object.values(summary));\r\n                setLoadingRecords(false);\r\n            } catch (error) {\r\n                setError('Error fetching blood records');\r\n            }\r\n        };\r\n\r\n        fetchRecordsSummary();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"profile-and-records\">\r\n            <div className=\"profile-management\">\r\n                <h1>Change Password</h1>\r\n                {error && <p className=\"error\">{error}</p>}\r\n                <div className=\"profile-form\">\r\n                    <div>\r\n                        <label>New Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button onClick={handlePasswordChange}>Change Password</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"blood-records-summary\">\r\n                <h1>Blood Records Summary</h1>\r\n                {error && <p className=\"error\">{error}</p>}\r\n                {loadingRecords ? (\r\n                    <p>Loading...</p>\r\n                ) : recordsSummary.length === 0 ? (\r\n                    <p>No records available.</p>\r\n                ) : (\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>Location</th>\r\n                                <th>Total Quantity</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {recordsSummary.map((record, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{record.date}</td>\r\n                                    <td>{record.location}</td>\r\n                                    <td>{record.totalQuantity}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileAndRecords;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,cAAc,QAAQ,eAAe;AACvD,SAASC,EAAE,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,QAAQ,gBAAgB;AAC/D,OAAO,qBAAqB;AAE5B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMiB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACA,MAAMC,IAAI,GAAGhB,OAAO,CAAC,CAAC;MACtB,MAAMC,cAAc,CAACe,IAAI,CAACC,WAAW,EAAEV,WAAW,CAAC;MACnDW,KAAK,CAAC,+BAA+B,CAAC;MACtCV,cAAc,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,QAAQ,CAAC,yBAAyB,CAAC;IACvC;EACJ,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACZ,MAAMoB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMC,CAAC,GAAGhB,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,cAAc,CAAC,CAAC;QAC/C,MAAMmB,aAAa,GAAG,MAAMhB,OAAO,CAACe,CAAC,CAAC;QACtC,MAAME,OAAO,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;;QAEzD;QACA,MAAMC,OAAO,GAAGL,OAAO,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;UAC5C,MAAMC,GAAG,GAAG,GAAGD,MAAM,CAACE,IAAI,IAAIF,MAAM,CAACG,QAAQ,EAAE;UAC/C,IAAI,CAACJ,GAAG,CAACE,GAAG,CAAC,EAAE;YACXF,GAAG,CAACE,GAAG,CAAC,GAAG;cACPC,IAAI,EAAEF,MAAM,CAACE,IAAI;cACjBC,QAAQ,EAAEH,MAAM,CAACG,QAAQ;cACzBC,aAAa,EAAE;YACnB,CAAC;UACL;UACAL,GAAG,CAACE,GAAG,CAAC,CAACG,aAAa,IAAIC,UAAU,CAACL,MAAM,CAACM,QAAQ,CAAC,IAAI,CAAC;UAC1D,OAAOP,GAAG;QACd,CAAC,EAAE,CAAC,CAAC,CAAC;QAENjB,iBAAiB,CAACyB,MAAM,CAACC,MAAM,CAACX,OAAO,CAAC,CAAC;QACzCb,iBAAiB,CAAC,KAAK,CAAC;MAC5B,CAAC,CAAC,OAAOL,KAAK,EAAE;QACZC,QAAQ,CAAC,8BAA8B,CAAC;MAC5C;IACJ,CAAC;IAEDS,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,KAAA,CAAA0C,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCjD,KAAA,CAAA0C,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iBAAmB,CAAC,EACvBrC,KAAK,iBAAIZ,KAAA,CAAA0C,aAAA;IAAGC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAErC,KAAS,CAAC,eAC1CZ,KAAA,CAAA0C,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,eAAoB,CAAC,eAC5BjD,KAAA,CAAA0C,aAAA;IACIQ,IAAI,EAAC,UAAU;IACfC,KAAK,EAAEzC,WAAY;IACnB0C,QAAQ,EAAGC,CAAC,IAAK1C,cAAc,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnD,CACA,CAAC,eACNjD,KAAA,CAAA0C,aAAA;IAAQa,OAAO,EAAErC,oBAAqB;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAuB,CAC7D,CACJ,CAAC,eAENjD,KAAA,CAAA0C,aAAA;IAAKC,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,EAC7BrC,KAAK,iBAAIZ,KAAA,CAAA0C,aAAA;IAAGC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAErC,KAAS,CAAC,EACzCI,cAAc,gBACXhB,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC,GACjBnC,cAAc,CAAC0C,MAAM,KAAK,CAAC,gBAC3BxD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,uBAAwB,CAAC,gBAE5BjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,MAAQ,CAAC,eACbjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gBAAkB,CACtB,CACD,CAAC,eACRjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKnC,cAAc,CAACa,GAAG,CAAC,CAACM,MAAM,EAAEwB,KAAK,kBAC9BzD,KAAA,CAAA0C,aAAA;IAAIR,GAAG,EAAEuB,KAAM;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACXjD,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKhB,MAAM,CAACE,IAAS,CAAC,eACtBnC,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKhB,MAAM,CAACG,QAAa,CAAC,eAC1BpC,KAAA,CAAA0C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKhB,MAAM,CAACI,aAAkB,CAC9B,CACP,CACE,CACJ,CAEV,CACJ,CAAC;AAEd,CAAC;AAED,eAAe5B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}