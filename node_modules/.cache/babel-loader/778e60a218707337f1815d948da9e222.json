{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\pages\\\\Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../../App.css';\nimport Dashboards from '../Dashbar';\nimport Footer from '../Footer';\nimport { db, collection, query, where, getDocs } from '../../firebase';\nfunction Dashboard({\n  hospital,\n  handleLogout,\n  updateNotificationCount\n}) {\n  const [notificationCount, setNotificationCount] = useState(0);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        // Query to get the count of pending notifications\n        const q = query(collection(db, 'requests'), where('status', '==', 'pending'));\n        const querySnapshot = await getDocs(q);\n        // Update state with the count of pending notifications\n        const count = querySnapshot.size;\n        setNotificationCount(querySnapshot.size);\n        console.log('Notification count:', querySnapshot.size);\n        updateNotificationCount(count);\n      } catch (error) {\n        console.error('Error fetching notifications:', error);\n      }\n    };\n    fetchNotifications();\n  }, [updateNotificationCount]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dashboards, {\n    hospital: hospital,\n    handleLogout: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n}\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Dashboards","Footer","db","collection","query","where","getDocs","Dashboard","hospital","handleLogout","updateNotificationCount","notificationCount","setNotificationCount","fetchNotifications","q","querySnapshot","count","size","console","log","error","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/User/blood-bank-management/src/components/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../App.css';\r\nimport Dashboards from '../Dashbar';\r\nimport Footer from '../Footer';\r\nimport { db, collection, query, where, getDocs } from '../../firebase';\r\n\r\nfunction Dashboard({ hospital, handleLogout, updateNotificationCount}) {\r\n    const [notificationCount, setNotificationCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchNotifications = async () => {\r\n            try {\r\n                // Query to get the count of pending notifications\r\n                const q = query(collection(db, 'requests'), where('status', '==', 'pending'));\r\n                const querySnapshot = await getDocs(q);\r\n                // Update state with the count of pending notifications\r\n                const count = querySnapshot.size;\r\n                setNotificationCount(querySnapshot.size);\r\n                console.log('Notification count:', querySnapshot.size);\r\n                updateNotificationCount(count);\r\n            } catch (error) {\r\n                console.error('Error fetching notifications:', error);\r\n            }\r\n        };\r\n\r\n        fetchNotifications();\r\n    }, [updateNotificationCount]);\r\n\r\n    return (\r\n        <>\r\n            <Dashboards hospital={hospital} handleLogout={handleLogout} />\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,EAAE,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,QAAQ,gBAAgB;AAEtE,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC,YAAY;EAAEC;AAAuB,CAAC,EAAE;EACnE,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ,MAAMc,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA;QACA,MAAMC,CAAC,GAAGV,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QAC7E,MAAMU,aAAa,GAAG,MAAMT,OAAO,CAACQ,CAAC,CAAC;QACtC;QACA,MAAME,KAAK,GAAGD,aAAa,CAACE,IAAI;QAChCL,oBAAoB,CAACG,aAAa,CAACE,IAAI,CAAC;QACxCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,aAAa,CAACE,IAAI,CAAC;QACtDP,uBAAuB,CAACM,KAAK,CAAC;MAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IAEDP,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACH,uBAAuB,CAAC,CAAC;EAE7B,oBACIb,KAAA,CAAAwB,aAAA,CAAAxB,KAAA,CAAAyB,QAAA,qBACIzB,KAAA,CAAAwB,aAAA,CAACrB,UAAU;IAACQ,QAAQ,EAAEA,QAAS;IAACC,YAAY,EAAEA,YAAa;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC9D/B,KAAA,CAAAwB,aAAA,CAACpB,MAAM;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACX,CAAC;AAEX;AAEA,eAAerB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}