{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\RecordList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getBloodRecords, updateBloodRecord, deleteBloodRecord, addOrUpdateBloodRecord } from '../services/bloodService';\nimport './RecordList.css';\nconst RecordListWithModal = () => {\n  var _selectedRecord$blood;\n  const [data, setData] = useState([]);\n  const [selectedRecord, setSelectedRecord] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [recordToDelete, setRecordToDelete] = useState(null);\n  const [modalType, setModalType] = useState(''); // Track modal type: 'add' or 'update'\n  const [form, setForm] = useState({\n    date: '',\n    location: '',\n    bloodType: '',\n    event: '',\n    donations: '',\n    supply: '',\n    temperature: '',\n    bloodStock: [] // Added field for blood stock\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const records = await getBloodRecords();\n        console.log(records); // Check the structure of the fetched records\n        // Calculate stock difference and update records\n        const updatedRecords = records.map(record => ({\n          ...record,\n          stock: record.donations - record.supply\n        }));\n        setData(updatedRecords);\n      } catch (error) {\n        console.error(\"Error fetching blood records:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (selectedRecord) {\n      setForm({\n        date: selectedRecord.date || '',\n        location: selectedRecord.location || '',\n        bloodType: selectedRecord.bloodType || '',\n        event: selectedRecord.event || '',\n        donations: selectedRecord.donations || '',\n        supply: selectedRecord.supply || '',\n        temperature: selectedRecord.temperature || '',\n        bloodStock: selectedRecord.bloodStock || [] // Populate blood stock for the selected record\n      });\n    }\n  }, [selectedRecord]);\n  const handleUpdate = record => {\n    setSelectedRecord(record);\n    setModalType('update');\n    setShowModal(true);\n  };\n  const handleAdd = () => {\n    setSelectedRecord(null);\n    setModalType('add');\n    setForm({\n      date: '',\n      location: '',\n      bloodType: '',\n      event: '',\n      donations: '',\n      supply: '',\n      temperature: '',\n      bloodStock: [] // Initialize empty blood stock for new record\n    });\n    setShowModal(true);\n  };\n  const handleDelete = id => {\n    setRecordToDelete(id);\n    setShowDeleteConfirm(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      await deleteBloodRecord(recordToDelete);\n      setRecordToDelete(null);\n      setShowDeleteConfirm(false);\n      const records = await getBloodRecords();\n      const updatedRecords = records.map(record => ({\n        ...record,\n        stock: record.donations - record.supply\n      }));\n      setData(updatedRecords);\n    } catch (error) {\n      console.error(\"Error deleting blood record:\", error);\n    }\n  };\n  const cancelDelete = () => {\n    setRecordToDelete(null);\n    setShowDeleteConfirm(false);\n  };\n  const closeModal = () => {\n    setSelectedRecord(null);\n    setShowModal(false);\n  };\n  const handleSave = async form => {\n    try {\n      if (modalType === 'update') {\n        await updateBloodRecord(selectedRecord.id, form);\n      } else if (modalType === 'add') {\n        await addOrUpdateBloodRecord(form);\n      }\n      closeModal();\n      const records = await getBloodRecords();\n      const updatedRecords = records.map(record => ({\n        ...record,\n        stock: record.donations - record.supply\n      }));\n      setData(updatedRecords);\n    } catch (error) {\n      console.error(\"Error saving record:\", error);\n      alert(\"There was an error saving the record. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-record-button\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Add New Record\"), data.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-box\",\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-name-location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, item.location), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, \"Blood Type: \", item.bloodType)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, \"In Stock:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, item.bloodStock.map((blood, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, blood.type, \": \", blood.amount))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleUpdate(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"Delete\")))), showModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n      if (form.donations <= 0 || form.supply <= 0) {\n        alert(\"Donations and Supply must be positive numbers.\");\n        return;\n      }\n      try {\n        const formattedData = {\n          ...form,\n          bloodType: form.bloodType,\n          bloodStock: form.bloodStock\n        };\n        console.log(\"Submitting data:\", formattedData);\n        await handleSave(formattedData);\n      } catch (error) {\n        console.error(\"Error saving record:\", error);\n        alert(\"There was an error saving the record. Please try again.\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"date\",\n    type: \"date\",\n    value: form.date || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      date: e.target.value\n    })),\n    placeholder: \"Date\",\n    required: true,\n    disabled: modalType === 'update',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"location\",\n    value: form.location || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      location: e.target.value\n    })),\n    placeholder: \"Location\",\n    required: true,\n    disabled: modalType === 'update',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  })), modalType === 'update' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"bloodType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 37\n    }\n  }, \"Blood Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"bloodType\",\n    name: \"bloodType\",\n    value: form.bloodType || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      bloodType: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }, selectedRecord === null || selectedRecord === void 0 ? void 0 : (_selectedRecord$blood = selectedRecord.bloodStock) === null || _selectedRecord$blood === void 0 ? void 0 : _selectedRecord$blood.map((bloodType, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: bloodType.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 45\n    }\n  }, bloodType.type)))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  }, \"Blood Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"bloodType\",\n    value: form.bloodType || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      bloodType: e.target.value\n    })),\n    placeholder: \"Blood Type\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, \"Event\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"event\",\n    value: form.event || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      event: e.target.value\n    })),\n    placeholder: \"Event\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, \"Donations\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"donations\",\n    type: \"number\",\n    value: form.donations || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      donations: e.target.value\n    })),\n    placeholder: \"Donations\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"Supply\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"supply\",\n    type: \"number\",\n    value: form.supply || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      supply: e.target.value\n    })),\n    placeholder: \"Supply\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, \"Temperature\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"temperature\",\n    type: \"number\",\n    value: form.temperature || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      temperature: e.target.value\n    })),\n    placeholder: \"Temperature\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  })), modalType === 'update' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-stock-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 37\n    }\n  }, \"Blood Stock:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 37\n    }\n  }, form.bloodStock.map((blood, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: blood.type,\n    onChange: e => {\n      const updatedBloodStock = [...form.bloodStock];\n      updatedBloodStock[index].type = e.target.value;\n      setForm(prev => ({\n        ...prev,\n        bloodStock: updatedBloodStock\n      }));\n    },\n    placeholder: \"Blood Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: blood.amount,\n    onChange: e => {\n      const updatedBloodStock = [...form.bloodStock];\n      updatedBloodStock[index].amount = e.target.value;\n      setForm(prev => ({\n        ...prev,\n        bloodStock: updatedBloodStock\n      }));\n    },\n    placeholder: \"Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setForm(prev => ({\n      ...prev,\n      bloodStock: [...prev.bloodStock, {\n        type: '',\n        amount: ''\n      }]\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, \"Add Blood Type\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 33\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }, \"Cancel\"))))), showDeleteConfirm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: cancelDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 25\n    }\n  }, \"Are you sure you want to delete this record?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: confirmDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cancelDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 29\n    }\n  }, \"Cancel\")))));\n};\nexport default RecordListWithModal;","map":{"version":3,"names":["React","useEffect","useState","getBloodRecords","updateBloodRecord","deleteBloodRecord","addOrUpdateBloodRecord","RecordListWithModal","_selectedRecord$blood","data","setData","selectedRecord","setSelectedRecord","showModal","setShowModal","showDeleteConfirm","setShowDeleteConfirm","recordToDelete","setRecordToDelete","modalType","setModalType","form","setForm","date","location","bloodType","event","donations","supply","temperature","bloodStock","fetchData","records","console","log","updatedRecords","map","record","stock","error","handleUpdate","handleAdd","handleDelete","id","confirmDelete","cancelDelete","closeModal","handleSave","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","item","key","blood","index","type","amount","onSubmit","e","preventDefault","formattedData","name","value","onChange","prev","target","placeholder","required","disabled","htmlFor","updatedBloodStock"],"sources":["C:/Users/User/blood-bank-management/src/components/RecordList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getBloodRecords, updateBloodRecord, deleteBloodRecord, addOrUpdateBloodRecord } from '../services/bloodService';\r\nimport './RecordList.css';\r\n\r\nconst RecordListWithModal = () => {\r\n    const [data, setData] = useState([]);\r\n    const [selectedRecord, setSelectedRecord] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [recordToDelete, setRecordToDelete] = useState(null);\r\n    const [modalType, setModalType] = useState(''); // Track modal type: 'add' or 'update'\r\n    const [form, setForm] = useState({\r\n        date: '',\r\n        location: '',\r\n        bloodType: '',\r\n        event: '',\r\n        donations: '',\r\n        supply: '',\r\n        temperature: '',\r\n        bloodStock: [] // Added field for blood stock\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const records = await getBloodRecords();\r\n                console.log(records); // Check the structure of the fetched records\r\n                // Calculate stock difference and update records\r\n                const updatedRecords = records.map(record => ({\r\n                    ...record,\r\n                    stock: record.donations - record.supply\r\n                }));\r\n                setData(updatedRecords);\r\n            } catch (error) {\r\n                console.error(\"Error fetching blood records:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedRecord) {\r\n            setForm({\r\n                date: selectedRecord.date || '',\r\n                location: selectedRecord.location || '',\r\n                bloodType: selectedRecord.bloodType || '',\r\n                event: selectedRecord.event || '',\r\n                donations: selectedRecord.donations || '',\r\n                supply: selectedRecord.supply || '',\r\n                temperature: selectedRecord.temperature || '',\r\n                bloodStock: selectedRecord.bloodStock || [] // Populate blood stock for the selected record\r\n            });\r\n        }\r\n    }, [selectedRecord]);\r\n\r\n    const handleUpdate = (record) => {\r\n        setSelectedRecord(record);\r\n        setModalType('update');\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        setSelectedRecord(null);\r\n        setModalType('add');\r\n        setForm({\r\n            date: '',\r\n            location: '',\r\n            bloodType: '',\r\n            event: '',\r\n            donations: '',\r\n            supply: '',\r\n            temperature: '',\r\n            bloodStock: [] // Initialize empty blood stock for new record\r\n        });\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        setRecordToDelete(id);\r\n        setShowDeleteConfirm(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        try {\r\n            await deleteBloodRecord(recordToDelete);\r\n            setRecordToDelete(null);\r\n            setShowDeleteConfirm(false);\r\n            const records = await getBloodRecords();\r\n            const updatedRecords = records.map(record => ({\r\n                ...record,\r\n                stock: record.donations - record.supply\r\n            }));\r\n            setData(updatedRecords);\r\n        } catch (error) {\r\n            console.error(\"Error deleting blood record:\", error);\r\n        }\r\n    };\r\n\r\n    const cancelDelete = () => {\r\n        setRecordToDelete(null);\r\n        setShowDeleteConfirm(false);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedRecord(null);\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleSave = async (form) => {\r\n        try {\r\n            if (modalType === 'update') {\r\n                await updateBloodRecord(selectedRecord.id, form);\r\n            } else if (modalType === 'add') {\r\n                await addOrUpdateBloodRecord(form);\r\n            }\r\n            closeModal();\r\n            const records = await getBloodRecords();\r\n            const updatedRecords = records.map(record => ({\r\n                ...record,\r\n                stock: record.donations - record.supply\r\n            }));\r\n            setData(updatedRecords);\r\n        } catch (error) {\r\n            console.error(\"Error saving record:\", error);\r\n            alert(\"There was an error saving the record. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"blood-bank-container\">\r\n            <button className=\"add-record-button\" onClick={handleAdd}>Add New Record</button>\r\n            {data.map((item) => (\r\n                <div className=\"blood-bank-box\" key={item.id}>\r\n                    <div className=\"blood-bank-info\">\r\n                        <div className=\"blood-bank-name-location\">\r\n                            <h2>{item.location}</h2>\r\n                            <p>Blood Type: {item.bloodType}</p>\r\n                        </div>\r\n                        <div className=\"blood-bank-stock\">\r\n                            <p>In Stock:</p>\r\n                            <ul>\r\n                                {item.bloodStock.map((blood, index) => (\r\n                                    <li key={index}>{blood.type}: {blood.amount}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"blood-bank-actions\">\r\n                        <button onClick={() => handleUpdate(item)}>Update</button>\r\n                        <button onClick={() => handleDelete(item.id)}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {showModal && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={closeModal}>&times;</span>\r\n                        <form\r\n                            onSubmit={async (e) => {\r\n                                e.preventDefault();\r\n                                if (form.donations <= 0 || form.supply <= 0) {\r\n                                    alert(\"Donations and Supply must be positive numbers.\");\r\n                                    return;\r\n                                }\r\n                                try {\r\n                                    const formattedData = {\r\n                                        ...form,\r\n                                        bloodType: form.bloodType,\r\n                                        bloodStock: form.bloodStock\r\n                                    };\r\n                                    console.log(\"Submitting data:\", formattedData);\r\n                                    await handleSave(formattedData);\r\n                                } catch (error) {\r\n                                    console.error(\"Error saving record:\", error);\r\n                                    alert(\"There was an error saving the record. Please try again.\");\r\n                                }\r\n                            }}\r\n                        >\r\n                            {/* Form Fields */}\r\n                            <div className=\"input-container\">\r\n                                <label>Date</label>\r\n                                <input\r\n                                    name=\"date\"\r\n                                    type=\"date\"\r\n                                    value={form.date || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, date: e.target.value }))}\r\n                                    placeholder=\"Date\"\r\n                                    required\r\n                                    disabled={modalType === 'update'}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Location</label>\r\n                                <input\r\n                                    name=\"location\"\r\n                                    value={form.location || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, location: e.target.value }))}\r\n                                    placeholder=\"Location\"\r\n                                    required\r\n                                    disabled={modalType === 'update'}\r\n                                />\r\n                            </div>\r\n                            {modalType === 'update' ? (\r\n                                <div className=\"input-container\">\r\n                                    <label htmlFor=\"bloodType\">Blood Type:</label>\r\n                                    <select\r\n                                        id=\"bloodType\"\r\n                                        name=\"bloodType\"\r\n                                        value={form.bloodType || ''}\r\n                                        onChange={(e) => setForm((prev) => ({ ...prev, bloodType: e.target.value }))}\r\n                                    >\r\n                                        {selectedRecord?.bloodStock?.map((bloodType, index) => (\r\n                                            <option key={index} value={bloodType.type}>{bloodType.type}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"input-container\">\r\n                                    <label>Blood Type</label>\r\n                                    <input\r\n                                        name=\"bloodType\"\r\n                                        value={form.bloodType || ''}\r\n                                        onChange={(e) => setForm((prev) => ({ ...prev, bloodType: e.target.value }))}\r\n                                        placeholder=\"Blood Type\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            <div className=\"input-container\">\r\n                                <label>Event</label>\r\n                                <input\r\n                                    name=\"event\"\r\n                                    value={form.event || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, event: e.target.value }))}\r\n                                    placeholder=\"Event\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Donations</label>\r\n                                <input\r\n                                    name=\"donations\"\r\n                                    type=\"number\"\r\n                                    value={form.donations || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, donations: e.target.value }))}\r\n                                    placeholder=\"Donations\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Supply</label>\r\n                                <input\r\n                                    name=\"supply\"\r\n                                    type=\"number\"\r\n                                    value={form.supply || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, supply: e.target.value }))}\r\n                                    placeholder=\"Supply\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Temperature</label>\r\n                                <input\r\n                                    name=\"temperature\"\r\n                                    type=\"number\"\r\n                                    value={form.temperature || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, temperature: e.target.value }))}\r\n                                    placeholder=\"Temperature\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            {/* Blood Stock List */}\r\n                            {modalType === 'update' && (\r\n                                <div className=\"blood-stock-container\">\r\n                                    <label>Blood Stock:</label>\r\n                                    <ul>\r\n                                        {form.bloodStock.map((blood, index) => (\r\n                                            <li key={index}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={blood.type}\r\n                                                    onChange={(e) => {\r\n                                                        const updatedBloodStock = [...form.bloodStock];\r\n                                                        updatedBloodStock[index].type = e.target.value;\r\n                                                        setForm((prev) => ({ ...prev, bloodStock: updatedBloodStock }));\r\n                                                    }}\r\n                                                    placeholder=\"Blood Type\"\r\n                                                />\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={blood.amount}\r\n                                                    onChange={(e) => {\r\n                                                        const updatedBloodStock = [...form.bloodStock];\r\n                                                        updatedBloodStock[index].amount = e.target.value;\r\n                                                        setForm((prev) => ({ ...prev, bloodStock: updatedBloodStock }));\r\n                                                    }}\r\n                                                    placeholder=\"Amount\"\r\n                                                />\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() =>\r\n                                            setForm((prev) => ({\r\n                                                ...prev,\r\n                                                bloodStock: [...prev.bloodStock, { type: '', amount: '' }]\r\n                                            }))\r\n                                        }\r\n                                    >\r\n                                        Add Blood Type\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\">Save</button>\r\n                                <button type=\"button\" onClick={closeModal}>Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {showDeleteConfirm && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={cancelDelete}>&times;</span>\r\n                        <p>Are you sure you want to delete this record?</p>\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={confirmDelete}>Confirm</button>\r\n                            <button onClick={cancelDelete}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecordListWithModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}