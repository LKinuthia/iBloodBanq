{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\components\\\\RecordList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getBloodRecords, updateBloodRecord, deleteBloodRecord, addOrUpdateBloodRecord } from '../services/bloodService';\nimport './RecordList.css';\nconst RecordListWithModal = () => {\n  var _selectedRecord$blood;\n  const [data, setData] = useState([]);\n  const [selectedRecord, setSelectedRecord] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [recordToDelete, setRecordToDelete] = useState(null);\n  const [modalType, setModalType] = useState(''); // Track modal type: 'add' or 'update'\n  const [form, setForm] = useState({\n    date: '',\n    location: '',\n    bloodType: '',\n    event: '',\n    donations: '',\n    supply: '',\n    temperature: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const records = await getBloodRecords();\n        console.log(records); // Check the structure of the fetched records\n\n        // Aggregate records by location and blood type\n        const aggregatedRecords = records.reduce((acc, record) => {\n          const key = `${record.location}-${record.bloodType}`;\n          if (!acc[key]) {\n            acc[key] = {\n              location: record.location,\n              bloodType: record.bloodType,\n              stock: record.donations - record.supply\n            };\n          } else {\n            acc[key].stock += record.donations - record.supply;\n          }\n          return acc;\n        }, {});\n\n        // Convert the aggregated records to an array\n        const updatedRecords = Object.values(aggregatedRecords);\n        setData(updatedRecords);\n      } catch (error) {\n        console.error(\"Error fetching blood records:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (selectedRecord) {\n      setForm({\n        date: selectedRecord.date || '',\n        location: selectedRecord.location || '',\n        bloodType: selectedRecord.bloodType || '',\n        event: selectedRecord.event || '',\n        donations: selectedRecord.donations || '',\n        supply: selectedRecord.supply || '',\n        temperature: selectedRecord.temperature || ''\n      });\n    }\n  }, [selectedRecord]);\n  const handleUpdate = record => {\n    setSelectedRecord(record);\n    setModalType('update');\n    setShowModal(true);\n  };\n  const handleAdd = () => {\n    setSelectedRecord(null);\n    setModalType('add');\n    setForm({\n      date: '',\n      location: '',\n      bloodType: '',\n      event: '',\n      donations: '',\n      supply: '',\n      temperature: ''\n    });\n    setShowModal(true);\n  };\n  const handleDelete = id => {\n    setRecordToDelete(id);\n    setShowDeleteConfirm(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      await deleteBloodRecord(recordToDelete);\n      setRecordToDelete(null);\n      setShowDeleteConfirm(false);\n      const records = await getBloodRecords();\n      const aggregatedRecords = records.reduce((acc, record) => {\n        const key = `${record.location}-${record.bloodType}`;\n        if (!acc[key]) {\n          acc[key] = {\n            location: record.location,\n            bloodType: record.bloodType,\n            stock: record.donations - record.supply\n          };\n        } else {\n          acc[key].stock += record.donations - record.supply;\n        }\n        return acc;\n      }, {});\n      setData(Object.values(aggregatedRecords));\n    } catch (error) {\n      console.error(\"Error deleting blood record:\", error);\n    }\n  };\n  const cancelDelete = () => {\n    setRecordToDelete(null);\n    setShowDeleteConfirm(false);\n  };\n  const closeModal = () => {\n    setSelectedRecord(null);\n    setShowModal(false);\n  };\n  const handleSave = async form => {\n    try {\n      if (modalType === 'update') {\n        await updateBloodRecord(selectedRecord.id, form);\n      } else if (modalType === 'add') {\n        await addOrUpdateBloodRecord(form);\n      }\n      closeModal();\n      const records = await getBloodRecords();\n      const aggregatedRecords = records.reduce((acc, record) => {\n        const key = `${record.location}-${record.bloodType}`;\n        if (!acc[key]) {\n          acc[key] = {\n            location: record.location,\n            bloodType: record.bloodType,\n            stock: record.donations - record.supply\n          };\n        } else {\n          acc[key].stock += record.donations - record.supply;\n        }\n        return acc;\n      }, {});\n      setData(Object.values(aggregatedRecords));\n    } catch (error) {\n      console.error(\"Error saving record:\", error);\n      alert(\"There was an error saving the record. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-record-button\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Add New Record\"), data.reduce((acc, record) => {\n    const location = acc.find(item => item.location === record.location);\n    if (location) {\n      location.bloodTypes.push(record);\n    } else {\n      acc.push({\n        location: record.location,\n        bloodTypes: [record]\n      });\n    }\n    return acc;\n  }, []).map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-box\",\n    key: item.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-name-location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, item.location), item.bloodTypes.map(bloodRecord => /*#__PURE__*/React.createElement(\"p\", {\n    key: bloodRecord.bloodType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 37\n    }\n  }, \"Blood Type: \", bloodRecord.bloodType))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, \"In Stock:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, item.bloodTypes.map(bloodRecord => /*#__PURE__*/React.createElement(\"li\", {\n    key: bloodRecord.bloodType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 41\n    }\n  }, bloodRecord.bloodType, \": \", bloodRecord.stock))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blood-bank-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleUpdate(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, \"Delete\")))), showModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n      if (form.donations <= 0 || form.supply <= 0) {\n        alert(\"Donations and Supply must be positive numbers.\");\n        return;\n      }\n      try {\n        const formattedData = {\n          ...form,\n          bloodType: form.bloodType\n        };\n        console.log(\"Submitting data:\", formattedData);\n        await handleSave(formattedData);\n      } catch (error) {\n        console.error(\"Error saving record:\", error);\n        alert(\"There was an error saving the record. Please try again.\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"date\",\n    type: \"date\",\n    value: form.date || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      date: e.target.value\n    })),\n    placeholder: \"Date\",\n    required: true,\n    disabled: modalType === 'update',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"location\",\n    value: form.location || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      location: e.target.value\n    })),\n    placeholder: \"Location\",\n    required: true,\n    disabled: modalType === 'update',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  })), modalType === 'update' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"bloodType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 37\n    }\n  }, \"Blood Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"bloodType\",\n    name: \"bloodType\",\n    value: form.bloodType || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      bloodType: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 37\n    }\n  }, selectedRecord === null || selectedRecord === void 0 ? void 0 : (_selectedRecord$blood = selectedRecord.bloodTypes) === null || _selectedRecord$blood === void 0 ? void 0 : _selectedRecord$blood.map((bloodType, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: bloodType.bloodType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 45\n    }\n  }, bloodType.bloodType)))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 37\n    }\n  }, \"Blood Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"bloodType\",\n    value: form.bloodType || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      bloodType: e.target.value\n    })),\n    placeholder: \"Blood Type\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"Event\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"event\",\n    value: form.event || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      event: e.target.value\n    })),\n    placeholder: \"Event\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }, \"Donations\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"donations\",\n    type: \"number\",\n    value: form.donations || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      donations: e.target.value\n    })),\n    placeholder: \"Donations\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  }, \"Supply\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"supply\",\n    type: \"number\",\n    value: form.supply || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      supply: e.target.value\n    })),\n    placeholder: \"Supply\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 33\n    }\n  }, \"Temperature\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"temperature\",\n    type: \"number\",\n    value: form.temperature || '',\n    onChange: e => setForm(prev => ({\n      ...prev,\n      temperature: e.target.value\n    })),\n    placeholder: \"Temperature\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, modalType === 'update' ? 'Update' : 'Add')))), showDeleteConfirm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: cancelDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }, \"Are you sure you want to delete this record?\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: confirmDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cancelDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }, \"No\"))));\n};\nexport default RecordListWithModal;","map":{"version":3,"names":["React","useEffect","useState","getBloodRecords","updateBloodRecord","deleteBloodRecord","addOrUpdateBloodRecord","RecordListWithModal","_selectedRecord$blood","data","setData","selectedRecord","setSelectedRecord","showModal","setShowModal","showDeleteConfirm","setShowDeleteConfirm","recordToDelete","setRecordToDelete","modalType","setModalType","form","setForm","date","location","bloodType","event","donations","supply","temperature","fetchData","records","console","log","aggregatedRecords","reduce","acc","record","key","stock","updatedRecords","Object","values","error","handleUpdate","handleAdd","handleDelete","id","confirmDelete","cancelDelete","closeModal","handleSave","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","find","item","bloodTypes","push","map","bloodRecord","onSubmit","e","preventDefault","formattedData","name","type","value","onChange","prev","target","placeholder","required","disabled","htmlFor","index"],"sources":["C:/Users/User/blood-bank-management/src/components/RecordList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getBloodRecords, updateBloodRecord, deleteBloodRecord, addOrUpdateBloodRecord } from '../services/bloodService';\r\nimport './RecordList.css';\r\n\r\nconst RecordListWithModal = () => {\r\n    const [data, setData] = useState([]);\r\n    const [selectedRecord, setSelectedRecord] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [recordToDelete, setRecordToDelete] = useState(null);\r\n    const [modalType, setModalType] = useState(''); // Track modal type: 'add' or 'update'\r\n    const [form, setForm] = useState({\r\n        date: '',\r\n        location: '',\r\n        bloodType: '',\r\n        event: '',\r\n        donations: '',\r\n        supply: '',\r\n        temperature: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const records = await getBloodRecords();\r\n                console.log(records); // Check the structure of the fetched records\r\n\r\n                // Aggregate records by location and blood type\r\n                const aggregatedRecords = records.reduce((acc, record) => {\r\n                    const key = `${record.location}-${record.bloodType}`;\r\n                    if (!acc[key]) {\r\n                        acc[key] = {\r\n                            location: record.location,\r\n                            bloodType: record.bloodType,\r\n                            stock: record.donations - record.supply\r\n                        };\r\n                    } else {\r\n                        acc[key].stock += record.donations - record.supply;\r\n                    }\r\n                    return acc;\r\n                }, {});\r\n\r\n                // Convert the aggregated records to an array\r\n                const updatedRecords = Object.values(aggregatedRecords);\r\n                setData(updatedRecords);\r\n            } catch (error) {\r\n                console.error(\"Error fetching blood records:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedRecord) {\r\n            setForm({\r\n                date: selectedRecord.date || '',\r\n                location: selectedRecord.location || '',\r\n                bloodType: selectedRecord.bloodType || '',\r\n                event: selectedRecord.event || '',\r\n                donations: selectedRecord.donations || '',\r\n                supply: selectedRecord.supply || '',\r\n                temperature: selectedRecord.temperature || ''\r\n            });\r\n        }\r\n    }, [selectedRecord]);\r\n\r\n    const handleUpdate = (record) => {\r\n        setSelectedRecord(record);\r\n        setModalType('update');\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        setSelectedRecord(null);\r\n        setModalType('add');\r\n        setForm({\r\n            date: '',\r\n            location: '',\r\n            bloodType: '',\r\n            event: '',\r\n            donations: '',\r\n            supply: '',\r\n            temperature: ''\r\n        });\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        setRecordToDelete(id);\r\n        setShowDeleteConfirm(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        try {\r\n            await deleteBloodRecord(recordToDelete);\r\n            setRecordToDelete(null);\r\n            setShowDeleteConfirm(false);\r\n            const records = await getBloodRecords();\r\n            const aggregatedRecords = records.reduce((acc, record) => {\r\n                const key = `${record.location}-${record.bloodType}`;\r\n                if (!acc[key]) {\r\n                    acc[key] = {\r\n                        location: record.location,\r\n                        bloodType: record.bloodType,\r\n                        stock: record.donations - record.supply\r\n                    };\r\n                } else {\r\n                    acc[key].stock += record.donations - record.supply;\r\n                }\r\n                return acc;\r\n            }, {});\r\n            setData(Object.values(aggregatedRecords));\r\n        } catch (error) {\r\n            console.error(\"Error deleting blood record:\", error);\r\n        }\r\n    };\r\n\r\n    const cancelDelete = () => {\r\n        setRecordToDelete(null);\r\n        setShowDeleteConfirm(false);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedRecord(null);\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleSave = async (form) => {\r\n        try {\r\n            if (modalType === 'update') {\r\n                await updateBloodRecord(selectedRecord.id, form);\r\n            } else if (modalType === 'add') {\r\n                await addOrUpdateBloodRecord(form);\r\n            }\r\n            closeModal();\r\n            const records = await getBloodRecords();\r\n            const aggregatedRecords = records.reduce((acc, record) => {\r\n                const key = `${record.location}-${record.bloodType}`;\r\n                if (!acc[key]) {\r\n                    acc[key] = {\r\n                        location: record.location,\r\n                        bloodType: record.bloodType,\r\n                        stock: record.donations - record.supply\r\n                    };\r\n                } else {\r\n                    acc[key].stock += record.donations - record.supply;\r\n                }\r\n                return acc;\r\n            }, {});\r\n            setData(Object.values(aggregatedRecords));\r\n        } catch (error) {\r\n            console.error(\"Error saving record:\", error);\r\n            alert(\"There was an error saving the record. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"blood-bank-container\">\r\n            <button className=\"add-record-button\" onClick={handleAdd}>Add New Record</button>\r\n            {data\r\n                .reduce((acc, record) => {\r\n                    const location = acc.find(item => item.location === record.location);\r\n                    if (location) {\r\n                        location.bloodTypes.push(record);\r\n                    } else {\r\n                        acc.push({\r\n                            location: record.location,\r\n                            bloodTypes: [record]\r\n                        });\r\n                    }\r\n                    return acc;\r\n                }, [])\r\n                .map((item) => (\r\n                    <div className=\"blood-bank-box\" key={item.location}>\r\n                        <div className=\"blood-bank-info\">\r\n                            <div className=\"blood-bank-name-location\">\r\n                                <h2>{item.location}</h2>\r\n                                {item.bloodTypes.map((bloodRecord) => (\r\n                                    <p key={bloodRecord.bloodType}>Blood Type: {bloodRecord.bloodType}</p>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"blood-bank-stock\">\r\n                                <p>In Stock:</p>\r\n                                <ul>\r\n                                    {item.bloodTypes.map((bloodRecord) => (\r\n                                        <li key={bloodRecord.bloodType}>{bloodRecord.bloodType}: {bloodRecord.stock}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"blood-bank-actions\">\r\n                            <button onClick={() => handleUpdate(item)}>Update</button>\r\n                            <button onClick={() => handleDelete(item.id)}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            {showModal && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={closeModal}>&times;</span>\r\n                        <form\r\n                            onSubmit={async (e) => {\r\n                                e.preventDefault();\r\n                                if (form.donations <= 0 || form.supply <= 0) {\r\n                                    alert(\"Donations and Supply must be positive numbers.\");\r\n                                    return;\r\n                                }\r\n                                try {\r\n                                    const formattedData = {\r\n                                        ...form,\r\n                                        bloodType: form.bloodType,\r\n                                    };\r\n                                    console.log(\"Submitting data:\", formattedData);\r\n                                    await handleSave(formattedData);\r\n                                } catch (error) {\r\n                                    console.error(\"Error saving record:\", error);\r\n                                    alert(\"There was an error saving the record. Please try again.\");\r\n                                }\r\n                            }}\r\n                        >\r\n                            {/* Form Fields */}\r\n                            <div className=\"input-container\">\r\n                                <label>Date</label>\r\n                                <input\r\n                                    name=\"date\"\r\n                                    type=\"date\"\r\n                                    value={form.date || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, date: e.target.value }))}\r\n                                    placeholder=\"Date\"\r\n                                    required\r\n                                    disabled={modalType === 'update'}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Location</label>\r\n                                <input\r\n                                    name=\"location\"\r\n                                    value={form.location || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, location: e.target.value }))}\r\n                                    placeholder=\"Location\"\r\n                                    required\r\n                                    disabled={modalType === 'update'}\r\n                                />\r\n                            </div>\r\n                            {modalType === 'update' ? (\r\n                                <div className=\"input-container\">\r\n                                    <label htmlFor=\"bloodType\">Blood Type:</label>\r\n                                    <select\r\n                                        id=\"bloodType\"\r\n                                        name=\"bloodType\"\r\n                                        value={form.bloodType || ''}\r\n                                        onChange={(e) => setForm((prev) => ({ ...prev, bloodType: e.target.value }))}\r\n                                    >\r\n                                        {selectedRecord?.bloodTypes?.map((bloodType, index) => (\r\n                                            <option key={index} value={bloodType.bloodType}>{bloodType.bloodType}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"input-container\">\r\n                                    <label>Blood Type</label>\r\n                                    <input\r\n                                        name=\"bloodType\"\r\n                                        value={form.bloodType || ''}\r\n                                        onChange={(e) => setForm((prev) => ({ ...prev, bloodType: e.target.value }))}\r\n                                        placeholder=\"Blood Type\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            <div className=\"input-container\">\r\n                                <label>Event</label>\r\n                                <input\r\n                                    name=\"event\"\r\n                                    value={form.event || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, event: e.target.value }))}\r\n                                    placeholder=\"Event\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Donations</label>\r\n                                <input\r\n                                    name=\"donations\"\r\n                                    type=\"number\"\r\n                                    value={form.donations || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, donations: e.target.value }))}\r\n                                    placeholder=\"Donations\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Supply</label>\r\n                                <input\r\n                                    name=\"supply\"\r\n                                    type=\"number\"\r\n                                    value={form.supply || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, supply: e.target.value }))}\r\n                                    placeholder=\"Supply\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-container\">\r\n                                <label>Temperature</label>\r\n                                <input\r\n                                    name=\"temperature\"\r\n                                    type=\"number\"\r\n                                    value={form.temperature || ''}\r\n                                    onChange={(e) => setForm((prev) => ({ ...prev, temperature: e.target.value }))}\r\n                                    placeholder=\"Temperature\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\">{modalType === 'update' ? 'Update' : 'Add'}</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showDeleteConfirm && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={cancelDelete}>&times;</span>\r\n                        <p>Are you sure you want to delete this record?</p>\r\n                        <button onClick={confirmDelete}>Yes</button>\r\n                        <button onClick={cancelDelete}>No</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecordListWithModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}