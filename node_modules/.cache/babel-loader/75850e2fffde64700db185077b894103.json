{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\blood-bank-management\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport LoginNavbar from './components/LoginNavbar.js';\nimport Home from './components/pages/Home';\nimport AboutUs from './components/pages/AboutUs.js';\nimport FindBlood from './components/pages/FindBlood.js';\nimport Login from './components/pages/Login.js';\nimport Dashboard from './components/pages/Dashboard.js';\nimport DashboardNavbar from './components/DashboardNavbar.js';\nconst App = () => {\n  const [hospital, setHospital] = useState(null);\n  const [notificationCount, setNotificationCount] = useState(0);\n  useEffect(() => {\n    const savedHospital = localStorage.getItem('hospital');\n    if (savedHospital) {\n      setHospital(JSON.parse(savedHospital));\n    }\n  }, []);\n  const handleLoginSuccess = hospital => {\n    setHospital(hospital);\n    localStorage.setItem('hospital', JSON.stringify(hospital));\n  };\n  const handleLogout = () => {\n    setHospital(null);\n    localStorage.removeItem('hospital');\n  };\n\n  // Function to update notification count\n  const updateNotificationCount = count => {\n    setNotificationCount(count);\n  };\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavWrapper, {\n    hospital: hospital,\n    handleLogout: handleLogout,\n    notificationCount: notificationCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/aboutus\",\n    element: /*#__PURE__*/React.createElement(AboutUs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/findblood\",\n    element: /*#__PURE__*/React.createElement(FindBlood, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    element: /*#__PURE__*/React.createElement(Login, {\n      onLoginSuccess: handleLoginSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 47\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/dash\",\n    element: hospital ? /*#__PURE__*/React.createElement(Dashboard, {\n      hospital: hospital,\n      handleLogout: handleLogout,\n      updateNotificationCount: updateNotificationCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 57\n      }\n    }) : /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 171\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })));\n};\nconst NavWrapper = ({\n  hospital,\n  handleLogout,\n  notificationCount\n}) => {\n  const location = useLocation();\n  if (location.pathname === '/login') {\n    return /*#__PURE__*/React.createElement(LoginNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    });\n  } else if (location.pathname === '/dash') {\n    return /*#__PURE__*/React.createElement(DashboardNavbar, {\n      hospitalName: hospital ? hospital.name : 'Hospital',\n      notificationCount: notificationCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    });\n  }\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useLocation","Navigate","Navbar","LoginNavbar","Home","AboutUs","FindBlood","Login","Dashboard","DashboardNavbar","App","hospital","setHospital","notificationCount","setNotificationCount","savedHospital","localStorage","getItem","JSON","parse","handleLoginSuccess","setItem","stringify","handleLogout","removeItem","updateNotificationCount","count","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","NavWrapper","path","element","onLoginSuccess","to","location","pathname","hospitalName","name"],"sources":["C:/Users/User/blood-bank-management/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport LoginNavbar from './components/LoginNavbar.js';\nimport Home from './components/pages/Home';\nimport AboutUs from './components/pages/AboutUs.js';\nimport FindBlood from './components/pages/FindBlood.js';\nimport Login from './components/pages/Login.js';\nimport Dashboard from './components/pages/Dashboard.js';\nimport DashboardNavbar from './components/DashboardNavbar.js';\n\nconst App = () => {\n    const [hospital, setHospital] = useState(null);\n    const [notificationCount, setNotificationCount] = useState(0);\n\n    useEffect(() => {\n        const savedHospital = localStorage.getItem('hospital');\n        if (savedHospital) {\n            setHospital(JSON.parse(savedHospital));\n        }\n    }, []);\n\n    const handleLoginSuccess = (hospital) => {\n        setHospital(hospital);\n        localStorage.setItem('hospital', JSON.stringify(hospital));\n    };\n\n    const handleLogout = () => {\n        setHospital(null);\n        localStorage.removeItem('hospital');\n    };\n\n     // Function to update notification count\n     const updateNotificationCount = (count) => {\n        setNotificationCount(count);\n    };\n\n    return (\n        <Router>\n            <NavWrapper hospital={hospital} handleLogout={handleLogout} notificationCount={notificationCount} />\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/aboutus\" element={<AboutUs />} />\n                <Route path=\"/findblood\" element={<FindBlood />} />\n                <Route path=\"/login\" element={<Login onLoginSuccess={handleLoginSuccess} />} />\n                <Route path=\"/dash\" element={hospital ? <Dashboard hospital={hospital} handleLogout={handleLogout} updateNotificationCount={updateNotificationCount} /> : <Navigate to=\"/login\" />} />\n            </Routes>\n        </Router>\n    );\n}\n\nconst NavWrapper = ({ hospital, handleLogout, notificationCount }) => {\n    const location = useLocation();\n\n    if (location.pathname === '/login') {\n        return <LoginNavbar />;\n    } else if (location.pathname === '/dash') {\n        return <DashboardNavbar hospitalName={hospital ? hospital.name : 'Hospital'} notificationCount={notificationCount} />;\n    } else {\n        return <Navbar />;\n    }\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}